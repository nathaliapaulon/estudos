https://github.com/badtuxx/DescomplicandoGitlab
https://docs.gitlab.com/ee/ci/yaml/

git config --global user.name "Nathalia Paulon"
git config --global user.email "nathaliapaulon@hotmail.com"

gerar chave ssh
		ssh-keygen

git clone git@gitlab.com:nathaliapaulon/desafiotecnico.git

git init Cria um novo repositório Git vazio ou reinicializa um repositório existente.

git clone Cria uma cópia de um repositório Git remoto em seu computador.
		git clone [LINHA DO SSH DO SITE GITLAB]

git add Adiciona as mudanças feitas em seus arquivos locais à área de preparação do Git para serem registradas.
		git add .
	(o ponto pega tudo da pasta)

git commit Registra as alterações feitas em seus arquivos locais e as adiciona ao histórico de alterações do Git.
		git commit -m "Dockerfile" [ARQUIVO]
	(-m pra adicionar comentario)
		git commit -m "" *
		git commit -a

git push Envia as alterações registradas em seu repositório local para um repositório remoto.
		git push origin [NOME DA NOVA BRANCH]

git pull Obtém as alterações feitas em um repositório remoto e as mescla com o repositório local.

git branch Lista todas as branches no repositório local e cria novas branches.

git checkout Alterna entre branches ou restaura arquivos para versões anteriores.
		git checkout -b [NOME DA NOVA BRANCH]

git merge      Combina as alterações de duas branches diferentes.
		git merge [NOME DA BRANCH SECUNDARIA]
	(estando na main)

git status       Exibe o status atual do repositório Git, incluindo quais arquivos foram modificados e quais estão prontos para serem registrados.

git log: Ver todos os commits
		git log -3
	(últimos 3 commits)
		git log --graph --decorate

git rm [ARQUIVO]       Deletar um arquivo e depois commitar 

git checkout -b [NOME]       Cria uma nova branch 

git branch -a 

DELETAR UMA BRANCH
		git branch -d [NOME DA BRANCH]
	deletar do repo remoto
		git push -d [NOME DA BRANCH]
	
git reset [NOME DO ARQUIVO]       tirar um arquivo após utilizar o 'git add'
		git reset --hard
	(remove arquivos do stagging área, mas remove também do diretório atual)

git commit --amend      mudar comentário do último commit

git revert [ID DO COMMIT QUE DESEJA] - pegar o id em git log 

git clean -n     mostra arquivos que podem ser removidos 

git clean -f     remove arquivos que não estão na stagging área 

git diff [QUEM ESTÁ APONTANDO PRO ÚLTIMO COMMIT]     ver as diferenças
		git diff HEAD
		git diff [ID 1 LOG COMMIT mais antigo] [ID 2 LOG COMMIT mais novo]
	(git log --oneline)
		
git diff --cached     mostra as diferenças entre o staged changes e o último commit 

git init --initial-branch=main        criar a repo na branch main 

git remote add origin [URL DO REPO]           adicionar um servidor remoto 

git remote -v      mostra mais informações 


YOU ARE NOT ALLOWED TO PUSH CODE TO THIS PROJECT
problema quando temos duas chaves no pc

ssh-agent - criar uma nova sessão

ssh-add [CAMINHO DA CHAVE] 
		ssh-add /home/npaulon/.ssh/gitlab 
		
ssh -T git@gitlab.com 

ssh -vvv git@gitlab.com 

/home/npaulon/.ssh/
criar
vim config 

	Host gitlab.com
	User git 
	Port 22
	Hostname gitlab.com
	IdentifyFile ~/.ssh/gitlab 
	TCPKeepAlive yes
	IdentitiesOnly yes 
	
WIP work in progress

git tag        ver as tags.

git tag -a [NOME DA TAG] -m "[MENSAGEM]"

git push origin [NOME DA TAG]

.gitignore

vim .gitignore
	*.log 
	minhas_senhas.txt

Commitou algum arquivo errado e fez o push 

git rm --cached 
git rm [NOME DO ARQUIVO PARA APAGAR]

REMOVER DO REPO
utilizar o commit 


https://gitlab.com/DescomplicandoGitlab/livro


Pipeline - Automatizar
Uma sequência de comandos, que será executado por um gitlab runner

Criar dockerfile
dockerfile depois crio o meu arquivo .ci para buildar o meu dockerfile 
depois crio meu arquivo terraform

UM PROJETO FEITO 
https://gitlab.com/nathaliapaulon/Projeto-DesafioDevOps





